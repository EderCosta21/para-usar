(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('ionic-angular')) :
    typeof define === 'function' && define.amd ? define('ion-bottom-drawer', ['exports', '@angular/core', 'ionic-angular'], factory) :
    (factory((global['ion-bottom-drawer'] = {}),global.ng.core,null));
}(this, (function (exports,core,ionicAngular) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    /** @enum {number} */
    var DrawerState = {
        Bottom: 0,
        Docked: 1,
        Top: 2,
    };
    DrawerState[DrawerState.Bottom] = "Bottom";
    DrawerState[DrawerState.Docked] = "Docked";
    DrawerState[DrawerState.Top] = "Top";

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var IonBottomDrawerComponent = (function () {
        function IonBottomDrawerComponent(_element, _renderer, _domCtrl, _platform) {
            this._element = _element;
            this._renderer = _renderer;
            this._domCtrl = _domCtrl;
            this._platform = _platform;
            this.dockedHeight = 50;
            this.shouldBounce = true;
            this.disableDrag = false;
            this.distanceTop = 0;
            this.transition = '0.25s ease-in-out';
            this.state = DrawerState.Bottom;
            this.minimumHeight = 0;
            this.stateChange = new core.EventEmitter();
            this._BOUNCE_DELTA = 30;
        }
        /**
         * @return {?}
         */
        IonBottomDrawerComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this._renderer.setStyle(this._element.nativeElement.querySelector('.ion-bottom-drawer-scrollable-content .scroll-content'), 'touch-action', 'none');
                this._setDrawerState(this.state);
                var /** @type {?} */ hammer = new Hammer(this._element.nativeElement);
                hammer.get('pan').set({ enable: true, direction: Hammer.DIRECTION_VERTICAL });
                hammer.on('pan panstart panend', function (ev) {
                    if (_this.disableDrag)
                        return;
                    switch (ev.type) {
                        case 'panstart':
                            _this._handlePanStart();
                            break;
                        case 'panend':
                            _this._handlePanEnd(ev);
                            break;
                        default:
                            _this._handlePan(ev);
                    }
                });
            };
        /**
         * @param {?} changes
         * @return {?}
         */
        IonBottomDrawerComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                if (!changes["state"])
                    return;
                this._setDrawerState(changes["state"].currentValue);
            };
        /**
         * @param {?} state
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._setDrawerState = /**
         * @param {?} state
         * @return {?}
         */
            function (state) {
                this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
                switch (state) {
                    case DrawerState.Bottom:
                        this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');
                        break;
                    case DrawerState.Docked:
                        this._setTranslateY((this._platform.height() - this.dockedHeight) + 'px');
                        break;
                    default:
                        this._setTranslateY(this.distanceTop + 'px');
                }
            };
        /**
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handlePanStart = /**
         * @return {?}
         */
            function () {
                this._startPositionTop = this._element.nativeElement.getBoundingClientRect().top;
            };
        /**
         * @param {?} ev
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handlePanEnd = /**
         * @param {?} ev
         * @return {?}
         */
            function (ev) {
                if (this.shouldBounce && ev.isFinal) {
                    this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
                    switch (this.state) {
                        case DrawerState.Docked:
                            this._handleDockedPanEnd(ev);
                            break;
                        case DrawerState.Top:
                            this._handleTopPanEnd(ev);
                            break;
                        default:
                            this._handleBottomPanEnd(ev);
                    }
                }
                this.stateChange.emit(this.state);
            };
        /**
         * @param {?} ev
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handleTopPanEnd = /**
         * @param {?} ev
         * @return {?}
         */
            function (ev) {
                if (ev.deltaY > this._BOUNCE_DELTA) {
                    this.state = DrawerState.Docked;
                }
                else {
                    this._setTranslateY(this.distanceTop + 'px');
                }
            };
        /**
         * @param {?} ev
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handleDockedPanEnd = /**
         * @param {?} ev
         * @return {?}
         */
            function (ev) {
                var /** @type {?} */ absDeltaY = Math.abs(ev.deltaY);
                if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY < 0) {
                    this.state = DrawerState.Top;
                }
                else if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY > 0) {
                    this.state = DrawerState.Bottom;
                }
                else {
                    this._setTranslateY((this._platform.height() - this.dockedHeight) + 'px');
                }
            };
        /**
         * @param {?} ev
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handleBottomPanEnd = /**
         * @param {?} ev
         * @return {?}
         */
            function (ev) {
                if (-ev.deltaY > this._BOUNCE_DELTA) {
                    this.state = DrawerState.Docked;
                }
                else {
                    this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');
                }
            };
        /**
         * @param {?} ev
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._handlePan = /**
         * @param {?} ev
         * @return {?}
         */
            function (ev) {
                var /** @type {?} */ pointerY = ev.center.y;
                this._renderer.setStyle(this._element.nativeElement, 'transition', 'none');
                if (pointerY > 0 && pointerY < this._platform.height()) {
                    if (ev.additionalEvent === 'panup' || ev.additionalEvent === 'pandown') {
                        var /** @type {?} */ newTop = this._startPositionTop + ev.deltaY;
                        if (newTop >= this.distanceTop)
                            this._setTranslateY(newTop + 'px');
                        else if (newTop < this.distanceTop)
                            this._setTranslateY(this.distanceTop + 'px');
                        if (newTop > this._platform.height() - this.minimumHeight)
                            this._setTranslateY((this._platform.height() - this.minimumHeight) + 'px');
                    }
                }
            };
        /**
         * @param {?} value
         * @return {?}
         */
        IonBottomDrawerComponent.prototype._setTranslateY = /**
         * @param {?} value
         * @return {?}
         */
            function (value) {
                var _this = this;
                this._domCtrl.write(function () {
                    _this._renderer.setStyle(_this._element.nativeElement, 'transform', 'translateY(' + value + ')');
                });
            };
        IonBottomDrawerComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'ion-bottom-drawer',
                        template: "<ion-content class=\"ion-bottom-drawer-scrollable-content\" no-bounce>\n  <ng-content></ng-content>\n</ion-content>\n",
                        styles: [":host{width:100%;height:100%;position:absolute;left:0;z-index:11!important;background-color:#fff;-webkit-transform:translateY(100vh);transform:translateY(100vh)}"]
                    },] },
        ];
        /** @nocollapse */
        IonBottomDrawerComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef, },
                { type: core.Renderer2, },
                { type: ionicAngular.DomController, },
                { type: ionicAngular.Platform, },
            ];
        };
        IonBottomDrawerComponent.propDecorators = {
            "dockedHeight": [{ type: core.Input },],
            "shouldBounce": [{ type: core.Input },],
            "disableDrag": [{ type: core.Input },],
            "distanceTop": [{ type: core.Input },],
            "transition": [{ type: core.Input },],
            "state": [{ type: core.Input },],
            "minimumHeight": [{ type: core.Input },],
            "stateChange": [{ type: core.Output },],
        };
        return IonBottomDrawerComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var IonBottomDrawerModule = (function () {
        function IonBottomDrawerModule() {
        }
        IonBottomDrawerModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [IonBottomDrawerComponent],
                        imports: [ionicAngular.IonicModule],
                        exports: [IonBottomDrawerComponent]
                    },] },
        ];
        return IonBottomDrawerModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.IonBottomDrawerModule = IonBottomDrawerModule;
    exports.DrawerState = DrawerState;
    exports.ɵa = IonBottomDrawerComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,